/* prevent borders for buttons */
.btn-default {
	border-style: none !important;
}

/* slightly increase list box width while removing inner spacing */
select.form-control {
	width: 140px;
	padding: 0px;
	padding-left: 3px;
	height: 26px;
}

/* centers modals */
.modal.in {
	display: flex !important;
}

.modal .modal-dialog {
	margin: auto;
}

/* get rid of modal header */
.modal .modal-header {
	display: none;
}

/* get rid of ridiculous padding in footer */
.modal .modal-footer {
	padding: 0px;
}

/* fix stupid bug in chrome rendering engine where scrolls are displayed for 15px and 16px padding (not for 14px and 17px!) */
.modal .modal-body {
	padding: 14px;
}

/* reduce margin for more sensible spacing */
.libraryCheckBox {
	margin-bottom: 5px !important;
}

/* prevent checkbox from touching the left side of the menu (default margin-left is -20px) */
.libraryCheckBox input {
	margin-left: -16px !important;
}

/* remove margin to title for consistency with exercise buttons */
.libraryCheckBox:first-of-type {
	margin-top: 0px;
}

/* stretch label to 100% so toggleInfoButton floats on the right of the menu */
.libraryCheckBox > label {
	min-width: 240px;
}

/* move button to the right and slightly to the bottom */
.toggleInfoButton {
	position: relative;
	float: right; 
	padding: 0 !important;
	height: 14px;
	margin-right: 10px;
	min-height: 0px !important;
	top: 3px;
}

.termInfo {
	color: #cccccc;
}
/* animate closing the info */
.toggleInfoCheckBox:not(:checked) ~ .termInfo {
	margin: 0;
	opacity: 0;
	padding: 0;
	font-size: 0;
	height: 0px !important;
	transition: opacity .125s,
                font-size .25s .125s,
                margin .25s .125s,
                padding .25s .125s;
}

/* animate opening the info */
.toggleInfoCheckBox:checked ~ .termInfo {
	font-size: 12px;
    transition: font-size .125s,
                margin .125s,
                padding .125s,
                opacity .25s .125s;
}

/* add borders to separate editor from control */
.editorExercisePanel {
	border-top-style: solid;
	border-bottom-style: solid;
	border-color: lightgrey;
	border-width: 1px;
}

/* fix gwt setting overflow: hidden on everything, hiding the editor menu */
.ioPanel > div {
	overflow: visible !important;
}

.inputPanel > div {
	overflow: visible !important;
}

.editorExercisePanel > div {
	overflow: visible !important;
}

/* set red icon color in line where error occured */
.editorErrorGlyphMargin {
	color: red;
}

/* set glyph error icon and align properly */
.editorErrorGlyphMargin::before {
	margin-left: 2px;
	font-family: "FontAwesome";
	content: "\f06a";
}

/* fix solutionArea overflowing its parent */
.exercisePanel {
	display: flex;
	flex-direction: column;
}

/* flow text around right floating exerciseControlPanel */
.exerciseDescriptionLabel {
	display: inline;
}

/* float exerciseControlPanel to the top right */
.exerciseControlPanel {
	float: right;
}

/* separate solution from description, fill rest of parent and fix overflowing */
.solutionArea {
	margin-top: 20px;
	height: 100% !important;
	box-sizing: border-box;
	resize: none;
	background-color: white !important;
}

/* align list boxes to the left and control buttons to the right */
.inputControlPanel {
	display: flex;
	justify-content: space-between;
}

/* fix listboxes flowing below option bar */
.optionBarPanel {
	display: flex;
}

/* prevent flowpanels from filling the entire width of the control panel */
.controlPanel > * {
	display: inline-block;
}

/* space controlPanel elements */
.spinner { margin-left: 20px; margin-right: 20px; }

/* align footer panel children */
.footerPanel {
	display: flex;
	align-items: bottom;
}

/* align buttons in footer panel */
.footerPanel>.btn-group {
	display: flex;
	align-items: bottom;
}

/* prevent export area resize and set background */
.exportArea {
	resize: none;
	background-color: white !important;
}

/* limit height to footer height, fix width instead of filling rest of footer, set background */
.sharePanel {
	height: 100% !important;
	width: 550px !important;
	background-color: white !important;
}

/* move label to the bottom right of the screen */
.reductionStepCounterLabel {
	position: absolute;
	top: 4px;
	right: 0;
	margin-right: 10px;
}

/* enable scrolling in output area and provide padding for output so terms are not squeezed to the edge*/
.output {
	display: inline;
	overflow: auto;
	left: 5px !important;
	right: 5px !important;
	width: 100%;
	height: 100%
}

/* fix canvas overlap */
.tree {
	display: inline-block;
    width: 100%;
    height: 100%;
    right: 0;
    top: 0;
}

/* change background color to distinguish two terms */
.grey {
	background-color: #f6f6f6;
}

/* highlight redexes on mouse over */
.hover:hover {
	background-color: #2b91af45;
}

.clickable .fillHighlight, .clickable .strokeHighlight {
	filter: url(#glow);
	cursor: pointer;
}
.notclickable .fillHighlight, .notclickable .strokeHighlight {
	filter: none;
}

.clickable:hover .fillHighlight {
	fill: #50cabd !important;
}
.clickable:hover .strokeHighlight {
	stroke: #50cabd !important;
}

/* overwrite default anchor styling, abstractions should look like normal text by default */
.abstraction {
	pointer-events: none;
	color: black;
	text-decoration: none;
	cursor: default;
}

/* abstractions (that are not part of a redex) inside applications should not look like they can be clicked */
.application a {
	pointer-events: none;
}

/* indicates a redex as clickable*/
.application .clickable {
	color: #2b91af;
	text-decoration: none;
	pointer-events: auto;
	cursor: pointer;
}

/* reverts styling for clicking */
.notclickable {
	color: black;
	cursor: default;
	pointer-events: none;  /* takes care of disabling SVG pointer events */
}

/* revert click-indicating stylings from notclickable terms */
.notclickable a.clickable {
	color: black;
	text-decoration: none;
	pointer-events: none;
	cursor: default;
}

/* indicates the next reduced redex considering the current reduction order */
.autoHighlight .nextRedex {
	border-bottom: 1px solid #2b91af;
}

/* beautiful, beautiful KIT green for selected redexes */
.autoHighlight .nextRedex .strokeHighlight, .reduced .strokeHighlight {
	stroke: #009782;
}
.autoHighlight .nextRedex .fillHighlight, .reduced .fillHighlight {
	fill: #009782;
}

/* indicates what redex was reduced */
.notclickable .reduced {
	border-bottom: 1px solid #2b91af
}

/* on custom click remove the next redex indication */
.customClick .nextRedex {
	border-bottom: none;
}

/* indicate the reduced redex if it was the nextRedex and step forward was clicked */
.customClick .nextRedex.reduced {
	border-bottom: 1px solid #2b91af
}


#mainMenuLibraryTitle, #mainMenuExerciseTitle {
    padding: 3px 20px;
    font-size: 1.3em;
    color: #e0e0e0;
    font-weight: bold;
}

/* Slide-in menu */
#toggleMenuCheckBox ~ div {
    transition:all 200ms ease-in;
}
.mainMenuPanel {
    overflow-y: auto;  /* If content is too large, allow scrolling */
    overflow-x: hidden;
    background-color: #3c3c3c;
    color: #fffffe;
    width:260px;
    padding-left: 10px;
    position: fixed;  /* for having full height at 100% */
    list-style: none; /* hide list item bullets */
    top:0px;
    height:100%;
    margin:0 0 0 -260px;
    transition:all 200ms ease-in;
}

.mainMenuPanel li a {
    color: #fffffe;
    line-height: 1.8em;
    display: block;
    padding-left: 1.4em;
}

#toggleMenuLabel { /* Actual menu graphic */
    padding-top: 7px;
    padding-bottom: 7px;
    padding-left: 10px;
    padding-right: 10px;
    font-size:1.2em;
    cursor: pointer;
    z-index:500;
    position: relative;
}

#toggleMenuLabel:hover {
	background: #e6e6e6;
}

#toggleMenuCheckBox:checked ~ div {
    margin-left: 260px;  /* Use margin-left instead of transform to ensure resizing of the main panel */
}

